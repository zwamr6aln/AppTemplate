
import SwiftUI

struct ðŸ” BiggerSystemFontTest: View {
    @State private var ðŸ” FontSize: CGFloat = ðŸ” computeFontSize()
    @Environment(\.dynamicTypeSize) var DTS: DynamicTypeSize
    @ScaledMetric private var â“¢ize: CGFloat = 32
    var body: some View {
        NavigationLink("BiggerSystemFont") {
            Text("LargeTitle(plain)")
                .font(.largeTitle.weight(.black))
            Text("LargeTitle(func)")
                .font(.system(size: ðŸ” FontSize).weight(.black))
                .onChange(of: DTS) { _ in
                    ðŸ” FontSize = ðŸ” computeFontSize()
                }
            Text("LargeTitle(extension)")
                .font(.system(size: UIFont.textStyleSize(.largeTitle)*1.2, weight: .black))
            Text("@ScaledMetric / 32")
                .font(.system(size: â“¢ize, weight: .black))
        }
    }
}

func ðŸ” computeFontSize() -> CGFloat {
    UIFont.preferredFont(forTextStyle: .largeTitle).pointSize * 1.2
}

public extension UIFont {
    static func textStyleSize(_ style: UIFont.TextStyle) -> CGFloat {
        UIFont.preferredFont(forTextStyle: style).pointSize
    }
}
