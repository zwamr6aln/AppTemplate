
import SwiftUI

struct ðŸ›’PurchaseSheet: ViewModifier {
    @Binding var ðŸš©ShowPurchaseSheet: Bool
    func body(content: Content) -> some View {
        content
            .sheet(isPresented: $ðŸš©ShowPurchaseSheet) {
                NavigationView {
                    ðŸ“£ADMenu()
                        .toolbar { ï¹€DismissButton($ðŸš©ShowPurchaseSheet) }
                }
                .navigationViewStyle(StackNavigationViewStyle())
            }
    }
    init(_ ðŸš©ShowPurchaseSheet: Binding<Bool>) {
        self._ðŸš©ShowPurchaseSheet = ðŸš©ShowPurchaseSheet
    }
}

struct ðŸ“£ADBanner_pattern1: View { //TODO: WIP
    @EnvironmentObject var ðŸ›’: ðŸ›’StoreModel
    @Binding var ðŸš©ShowPurchaseSheet: Bool
    var body: some View {
        if ðŸ›’.ðŸš©ADIsActive {
            ðŸ“£ADView()
                .overlay(alignment: .topTrailing) {
                    Button {
                        ðŸš©ShowPurchaseSheet = true
                        UISelectionFeedbackGenerator().selectionChanged()
                    } label: {
                        Image(systemName: "questionmark.circle")
                            .foregroundStyle(.secondary)
                            .font(.body.weight(.medium))
                            .padding(.vertical)
                            .padding(.leading)
                    }
                    .foregroundColor(.red)
                    .accessibilityLabel("Purchase")
                }
                .buttonStyle(.borderless)
        } else {
            EmptyView()
        }
    }
    init(_ ðŸš©ShowPurchaseSheet: Binding<Bool>) {
        self._ðŸš©ShowPurchaseSheet = ðŸš©ShowPurchaseSheet
    }
    
    struct purchaseSheet: View {
        @EnvironmentObject var ðŸ›’: ðŸ›’StoreModel
        @Environment(\.dismiss) var â““ismissAction: DismissAction
        var body: some View {
            NavigationView {
                ðŸ“£ADMenu()
                    .toolbar { ï¹€DismissButton(â““ismissAction) }
            }
            .navigationViewStyle(StackNavigationViewStyle())
        }
    }
}
