
import SwiftUI

struct ðŸ› MenuButton: View {
    @State private var ðŸš©ShowMenu = false
    
    var body: some View {
        Button {
            ðŸš©ShowMenu = true
            UISelectionFeedbackGenerator().selectionChanged()
        } label: {
            Label("Open menu", systemImage: "gear")
        }
        .sheet(isPresented: $ðŸš©ShowMenu) {
            ðŸ› AppMenu($ðŸš©ShowMenu)
                .onDisappear { ðŸš©ShowMenu = false }
        }
    }
}


struct ðŸ› AppMenu: View {
    @EnvironmentObject var ðŸ“±: ðŸ“±AppModel
    @Binding var ðŸš©ShowMenu: Bool
    
    var body: some View {
        NavigationView {
            List {
                Section {
                    Toggle(isOn: .constant(false)) {
                        Label("placeholder", systemImage: "questionmark")
                    }
                } header: { Text("Option") }
                
                ðŸ“£ADMenuLink()
                ðŸ“„InformationMenuLink()
            }
            .navigationTitle("AppName") //FIXME: App DisplayName
            .toolbar { ï¹€CloseMenuButton($ðŸš©ShowMenu) }
        }
    }
    
    init(_ ðŸš©: Binding<Bool>) { _ðŸš©ShowMenu = ðŸš© }
}
